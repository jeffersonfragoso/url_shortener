version: '3.4'


services:

  shortener:
    env_file:
      - ./src/shortener/.env
    build: ./src
    command: >
      python -m
        uvicorn
        shortener.main:app
        --reload
        --workers 1
        --host 0.0.0.0
        --port 8000
    volumes:
      - ./src:/home/url_shortener/src
    ports:
      - 8001:8000
    depends_on:
      # - db
      - mongo
      - kafka

  # db:
  #   image: postgres:15.3
  #   expose:
  #     - 5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=shortener

  mongo:
    image: mongo:latest
    volumes:
      - ./.docker/mongo/data:/data/db
      - ./.docker/mongo/docker-entrypoint-initdb.d/init.js:/docker-entrypoint-initdb.d/init.js
    environment:
      MONGO_INITDB_DATABASE: dev-shortener
    ports:
      - 27017:27017
    # healthcheck:
    #   test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT

